name: Create Extension Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update manifest version
        run: |
          jq --arg ver "${{ steps.get_version.outputs.VERSION }}" '.version = $ver' manifest.json > tmp.$$.json && mv tmp.$$.json manifest.json

      - name: Upload source code artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  sign-unlisted-firefox:
    name: Sign Firefox Extension (Unlisted)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Install latest web-ext
        run: npm install -g web-ext@latest

      - name: Sign as Unlisted
        run: >-
          web-ext sign
          --source-dir .
          --api-key "${{ secrets.AMO_API_KEY }}"
          --api-secret "${{ secrets.AMO_API_SECRET }}"
          --channel unlisted
          --timeout 600000 # Increased timeout for unlisted signing

      - name: Upload signed unlisted extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-unlisted-firefox-extension
          path: web-ext-artifacts/

  release-github:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [setup, sign-unlisted-firefox]
    permissions:
      contents: write
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code

      - name: Download signed unlisted Firefox extension
        uses: actions/download-artifact@v4
        with:
          name: signed-unlisted-firefox-extension
          path: dist/firefox-unlisted

      - name: Prepare release assets
        run: |
          # Package Chrome extension
          zip -r extension-chrome.zip . -x ".git/*" ".github/*" "node_modules/*" "dist/*"

          # Rename signed Firefox extension
          mv dist/firefox-unlisted/*.xpi dist/extension-firefox-${{ needs.setup.outputs.VERSION }}.xpi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.setup.outputs.VERSION }}
          name: Release v${{ needs.setup.outputs.VERSION }}
          files: |
            dist/extension-firefox-${{ needs.setup.outputs.VERSION }}.xpi
            extension-chrome.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  submit-listed-firefox:
    name: Submit Firefox Extension (Listed)
    runs-on: ubuntu-latest
    needs: [setup, sign-unlisted-firefox]
    steps:
      - name: Download signed unlisted extension
        uses: actions/download-artifact@v4
        with:
          name: signed-unlisted-firefox-extension
          path: web-ext-artifacts # Download to a known path

      - name: Install latest web-ext
        run: npm install -g web-ext@latest

      - name: Submit to AMO (Listed Channel)
        run: |
          XPI_FILE=$(find web-ext-artifacts -name "*.xpi")
          set +e # Disable exit on error for this block
          OUTPUT=$(web-ext sign \
            --xpi-file "$XPI_FILE" \
            --api-key "${{ secrets.AMO_API_KEY }}" \
            --api-secret "${{ secrets.AMO_API_SECRET }}" \
            --channel listed \
            --timeout 30000 2>&1) # Capture stderr as well
          EXIT_CODE=$?
          set -e # Re-enable exit on error

          echo "$OUTPUT" # Always print the output for debugging

          if [ $EXIT_CODE -ne 0 ]; then
            if echo "$OUTPUT" | grep -q "WebExtError: Approval: timeout exceeded"; then
              echo "::warning::Submission timed out, but was likely successful. Check AMO dashboard."
              exit 0 # Exit with success
            else
              echo "::error::Submission failed with unexpected error."
              exit $EXIT_CODE # Exit with original error code
            fi
          fi
